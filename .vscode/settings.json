{
  "editor.wordWrap": "off",
  // "C_Cpp.clang_format_fallbackStyle": "{ BasedOnStyle: LLVM, ColumnLimit: 0, BreakBeforeBraces: Attach, BreakBeforeBinaryOperators: None }",
  "editor.formatOnSave": true,
  "[cpp]": {
    "editor.tabSize": 4,
    "editor.insertSpaces": false,
    "editor.formatOnPaste": false,
    "editor.formatOnType": false
  },
  "C_Cpp.files.exclude": {

    "**/.vscode": true,
    "**/.vs": true
  },
  "files.associations": {
    "array": "cpp",
    "ostream": "cpp",
    "deque": "cpp",
    "forward_list": "cpp",
    "list": "cpp",
    "string": "cpp",
    "unordered_map": "cpp",
    "unordered_set": "cpp",
    "vector": "cpp",
    "initializer_list": "cpp",
    "regex": "cpp",
    "iostream": "cpp",
    "*.tcc": "cpp",
    "bitset": "cpp",
    "utility": "cpp",
    "valarray": "cpp",
    "new": "cpp",
    "iosfwd": "cpp",
    "atomic": "cpp",
    "cctype": "cpp",
    "cfenv": "cpp",
    "chrono": "cpp",
    "cinttypes": "cpp",
    "clocale": "cpp",
    "cmath": "cpp",
    "codecvt": "cpp",
    "complex": "cpp",
    "condition_variable": "cpp",
    "csetjmp": "cpp",
    "csignal": "cpp",
    "cstdarg": "cpp",
    "cstddef": "cpp",
    "cstdint": "cpp",
    "cstdio": "cpp",
    "cstdlib": "cpp",
    "cstring": "cpp",
    "ctime": "cpp",
    "cuchar": "cpp",
    "cwchar": "cpp",
    "cwctype": "cpp",
    "exception": "cpp",
    "algorithm": "cpp",
    "functional": "cpp",
    "iterator": "cpp",
    "map": "cpp",
    "memory": "cpp",
    "memory_resource": "cpp",
    "numeric": "cpp",
    "random": "cpp",
    "ratio": "cpp",
    "set": "cpp",
    "system_error": "cpp",
    "tuple": "cpp",
    "type_traits": "cpp",
    "fstream": "cpp",
    "future": "cpp",
    "iomanip": "cpp",
    "istream": "cpp",
    "limits": "cpp",
    "mutex": "cpp",
    "scoped_allocator": "cpp",
    "shared_mutex": "cpp",
    "sstream": "cpp",
    "stdexcept": "cpp",
    "streambuf": "cpp",
    "thread": "cpp",
    "typeindex": "cpp",
    "typeinfo": "cpp",
    "any": "cpp",
    "barrier": "cpp",
    "bit": "cpp",
    "charconv": "cpp",
    "compare": "cpp",
    "concepts": "cpp",
    "coroutine": "cpp",
    "expected": "cpp",
    "optional": "cpp",
    "source_location": "cpp",
    "string_view": "cpp",
    "format": "cpp",
    "latch": "cpp",
    "numbers": "cpp",
    "ranges": "cpp",
    "semaphore": "cpp",
    "span": "cpp",
    "spanstream": "cpp",
    "stacktrace": "cpp",
    "stdfloat": "cpp",
    "stop_token": "cpp",
    "syncstream": "cpp",
    "variant": "cpp"
  },
  "code-runner.executorMap": {
    "cpp": "cd $dir && g++ -std=c++20 -DGR47_LOCAL -Wall -Wextra -pedantic -O2 -Wshadow -Wformat=2 -Wfloat-equal -Wconversion -Wlogical-op -Wshift-overflow=2 -Wduplicated-cond -Wcast-qual -Wcast-align -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC -D_FORTIFY_SOURCE=2 -ftrapv -fno-sanitize-recover -fstack-protector $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
  },
  "code-runner.executorMapByFileExtension": {

    ".vb": "cd $dir && vbc /nologo $fileName && $dir$fileNameWithoutExt",
    ".vbs": "cscript //Nologo",
    ".scala": "scala",
    ".jl": "julia",
    ".cr": "crystal",
    ".ml": "ocaml",
    ".zig": "zig run",
    ".exs": "elixir",
    ".hx": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
    ".rkt": "racket",
    ".scm": "csi -script",
    ".ahk": "autohotkey",
    ".au3": "autoit3",
    ".kt": "cd $dir && kotlinc $fileName -include-runtime -d $fileNameWithoutExt.jar && java -jar $fileNameWithoutExt.jar",
    ".kts": "kotlinc -script",
    ".dart": "dart",
    ".pas": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
    ".pp": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
    ".d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
    ".hs": "runhaskell",
    ".nim": "nim compile --verbosity:0 --hints:off --run",
    ".csproj": "dotnet run --project",
    ".fsproj": "dotnet run --project",
    ".lisp": "sbcl --script",
    ".kit": "kitc --run",
    ".v": "v run",
    ".vsh": "v run",
    ".sass": "sass --style expanded",
    ".cu": "cd $dir && nvcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    ".ring": "ring",
    ".sml": "cd $dir && sml $fileName",
    ".mojo": "mojo run",
    ".erl": "escript",
    ".spwn": "spwn build",
    ".pkl": "cd $dir && pkl eval -f yaml $fileName -o $fileNameWithoutExt.yaml",
    ".gleam": "gleam run -m $fileNameWithoutExt"
  }
}
